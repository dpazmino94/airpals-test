{"version":3,"sources":["components/modal/modal.component.jsx","Constants.js","services/AutocompleteGoogle.js","components/autocomplete/autocomplete.component.jsx","pages/homepage/homepage.component.jsx","App.js","index.js"],"names":["ModalZipCode","open","handleClose","modalTitle","modalMessage","classes","makeStyles","theme","modal","display","alignItems","justifyContent","padding","paper","backgroundColor","palette","background","border","boxShadow","shadows","spacing","useStyles","Modal","aria-labelledby","aria-describedby","className","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","IconButton","color","onClick","component","id","map","value","index","MODAL_CONSTANTS","VALID_ZIP_CODES","filterOptions","createFilterOptions","limit","stylesAutocomplete","MozBoxShadow","WebkitBoxShadow","width","marginTop","icon","text","secondary","marginRight","autocompleteService","current","validateZipcode","placeId","Promise","resolve","reject","window","google","maps","places","PlacesService","document","createElement","getDetails","fields","details","postcode","address_components","forEach","entry","types","long_name","indexOf","AutocompleteGoogle","React","useState","setValue","setOpen","setTitle","setMessage","inputValue","setInputValue","options","setOptions","loaded","useRef","fetch","useMemo","throttle","request","callback","getPlacePredictions","querySelector","src","position","script","setAttribute","appendChild","loadScript","useEffect","active","AutocompleteService","input","results","a","newOptions","length","place_id","then","response","style","getOptionLabel","option","description","autoComplete","includeInputInList","filterSelectedOptions","onChange","event","newValue","onInputChange","newInputValue","renderInput","params","TextField","label","variant","fullWidth","renderOption","matches","structured_formatting","main_text_matched_substrings","parts","parse","main_text","match","offset","Grid","container","item","xs","part","fontWeight","highlight","Typography","secondary_text","Autocomplete","HomePage","App","exact","path","Component","ReactDOM","render","getElementById"],"mappings":"ieAqEeA,EA5DM,SAAC,GAAqD,IAAnDC,EAAkD,EAAlDA,KAAMC,EAA4C,EAA5CA,YAAaC,EAA+B,EAA/BA,WAAYC,EAAmB,EAAnBA,aAgB7CC,EAfYC,aAAW,SAACC,GAAD,MAAY,CACrCC,MAAO,CACHC,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBC,QAAS,SAEbC,MAAO,CACHC,gBAAiBP,EAAMQ,QAAQC,WAAWH,MAC1CI,OAAQ,iBACRC,UAAWX,EAAMY,QAAQ,GACzBP,QAASL,EAAMa,QAAQ,EAAG,EAAG,OAIrBC,GAGhB,OACI,8BACI,cAACC,EAAA,EAAD,CACIC,kBAAgB,yBAChBC,mBAAiB,+BACjBC,UAAWpB,EAAQG,MACnBP,KAAMA,EACNyB,QAASxB,EACTyB,sBAAoB,EACpBC,kBAAmBC,IACnBC,cAAe,CACXC,QAAS,KATjB,SAYI,cAACC,EAAA,EAAD,CAAMC,GAAIhC,EAAV,SACI,sBAAKwB,UAAWpB,EAAQQ,MAAxB,UACI,qBAAKY,UAAU,yBAAf,SACI,cAACS,EAAA,EAAD,CAAYC,MAAM,UAAUC,QAASlC,EAAamC,UAAU,OAA5D,SACI,cAAC,IAAD,QAGR,sBAAKZ,UAAU,uBAAf,UACI,oBAAIa,GAAG,yBAAP,SAAiCnC,IAE7BC,EAAamC,KAAI,SAACC,EAAOC,GACrB,OAAO,mBAAeH,GAAG,+BAAlB,SAAkDE,GAA1CC,MAGvB,qBAAKhB,UAAU,eAAeW,QAASlC,EAAvC,qCCxDfwC,EACI,kBADJA,EAEM,CACX,uCACA,mLACA,uDALKA,EAQM,uBARNA,EASQ,CACb,8BACA,6LACA,6CAIKC,EAAkB,CAC3B,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,SCxLJ,IAAMC,EAAgBC,YAAoB,CACtCC,MAAO,IAILC,EAAqB,CACvBC,aAAc,sCACdC,gBAAiB,sCACjB/B,UAAW,sCACXgC,MAAO,MACPC,UAAW,QAIT9B,EAAYf,aAAW,SAACC,GAAD,MAAY,CACrC6C,KAAM,CACFjB,MAAO5B,EAAMQ,QAAQsC,KAAKC,UAC1BC,YAAahD,EAAMa,QAAQ,QAK7BoC,EAAsB,CAAEC,QAAS,MAGjCC,EAAkB,SAACC,GACrB,OAAQ,IAAIC,SAAQ,SAACC,EAASC,GAC1B,IAAIC,OAAOC,OAAOC,KAAKC,OAAOC,cAC1BC,SAASC,cAAc,QACzBC,WACE,CACIX,UACAY,OAAQ,CAAC,wBAEb,SAAAC,GAAY,IAAD,EACHC,EAAW,KACR,OAAPD,QAAO,IAAPA,GAAA,UAAAA,EAASE,0BAAT,SAA6BC,SAAQ,SAAAC,GAAU,IAAD,EACjB,iBAArB,UAAAA,EAAMC,a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","file":"static/js/main.97b6dd2d.chunk.js","sourcesContent":["import React from 'react';\nimport '../modal/modal.styles.scss';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst ModalZipCode = ({ open, handleClose, modalTitle, modalMessage }) => {\n    const useStyles = makeStyles((theme) => ({\n        modal: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            padding: '0 36%',\n        },\n        paper: {\n            backgroundColor: theme.palette.background.paper,\n            border: '2px solid #000',\n            boxShadow: theme.shadows[5],\n            padding: theme.spacing(2, 4, 3),\n        },\n    }));\n\n    const classes = useStyles();\n\n\n    return (\n        <div>\n            <Modal\n                aria-labelledby=\"transition-modal-title\"\n                aria-describedby=\"transition-modal-description\"\n                className={classes.modal}\n                open={open}\n                onClose={handleClose}\n                closeAfterTransition\n                BackdropComponent={Backdrop}\n                BackdropProps={{\n                    timeout: 500,\n                }}\n            >\n                <Fade in={open}>\n                    <div className={classes.paper}>\n                        <div className='close_button_container'>\n                            <IconButton color=\"default\" onClick={handleClose} component=\"span\">\n                                <CloseIcon />\n                            </IconButton>\n                        </div>\n                        <div className=\"modal_text_container\">\n                            <h2 id=\"transition-modal-title\">{modalTitle}</h2>\n                            {\n                                modalMessage.map((value, index) => {\n                                    return(<p key={index} id=\"transition-modal-description\">{value}</p>) \n                                })\n                            }\n                            <div className=\"modal_button\" onClick={handleClose} >UNDERSTOOD</div>\n\n                        </div>\n                    </div>\n                </Fade>\n            </Modal>\n        </div>\n    );\n}\n\n\n\n\nexport default ModalZipCode;\n","export const MODAL_CONSTANTS = {\n    VALID_TITLE: \"Address updated\",\n    VALID_MESSAGE: [\n        '\"New address added to your account \"',\n        \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce tincidunt nibh id dolor sodales ullamcorper. Curabitur luctus finibus lacus, sed gravida mauris pretium ultrices.\",\n        \"Fusce tincidunt nibh id dolor sodales ullamcorper. \",\n    ],\n\n    INVALID_TITLE: \"Out of delivery area\",\n    INVALID_MESSAGE: [ \n        '\"Wherever I go, there I am\"',\n        \"Sadly, this quote is not true for us. Consectetur adipiscing elit. Fusce tincidunt nibh id dolor sodales ullamcorper. Curabitur luctus finibus lacus, sed gravida mauris pretium ultrices.\",\n        \"Sign up to our newsletter to get notified\",\n    ],\n\n}\nexport const VALID_ZIP_CODES = [\n    '10286',\n    '10099',\n    '10278',\n    '10119',\n    '10001',\n    '10124',\n    '10257',\n    '10105',\n    '10017',\n    '10138',\n    '10203',\n    '10199',\n    '10169',\n    '10212',\n    '10117',\n    '10111',\n    '10163',\n    '10103',\n    '10108',\n    '10157',\n    '10261',\n    '10109',\n    '10121',\n    '10159',\n    '10242',\n    '10004',\n    '10153',\n    '10116',\n    '10173',\n    '10081',\n    '10150',\n    '10265',\n    '10175',\n    '10060',\n    '10102',\n    '10179',\n    '10154',\n    '10096',\n    '10200',\n    '10114',\n    '10155',\n    '10185',\n    '10079',\n    '10271',\n    '10277',\n    '10129',\n    '10113',\n    '10171',\n    '10160',\n    '10276',\n    '10292',\n    '10006',\n    '10082',\n    '10269',\n    '10152',\n    '10174',\n    '10256',\n    '10196',\n    '10036',\n    '10055',\n    '10122',\n    '10258',\n    '10007',\n    '10020',\n    '10168',\n    '10177',\n    '10197',\n    '10118',\n    '10273',\n    '10112',\n    '10010',\n    '10123',\n    '10110',\n    '10107',\n    '10046',\n    '10164',\n    '10008',\n    '10120',\n    '10090',\n    '10259',\n    '10106',\n    '10149',\n    '10178',\n    '10275',\n    '10019',\n    '10158',\n    '10012',\n    '10156',\n    '10260',\n    '10172',\n    '10094',\n    '10005',\n    '10279',\n    '10048',\n    '10072',\n    '10095',\n    '10211',\n    '10018',\n    '10165',\n    '10268',\n    '10126',\n    '10161',\n    '10167',\n    '10170',\n    '10104',\n    '10022',\n    '10249',\n    '10176',\n    '10045',\n    '10016',\n    '10003',\n    '10166',\n    '10184',\n    '10098',\n    '10151',\n    '10015',\n    '10101',\n    '10087',\n    '10047',\n    '10011',\n    '10025',\n    '10280',\n    '10285',\n    '10024',\n    '10282',\n    '10038',\n    '10270',\n    '10133',\n    '10272',\n    '10065',\n    '10080',\n    '10162',\n    '10213',\n    '10028',\n    '10041',\n    '10131',\n    '10281',\n    '10002',\n    '10044',\n    '10043',\n    '10009',\n    '10029',\n    '10125',\n    '10014',\n    '10013',\n    '10130',\n    '10274',\n    '10128',\n    '10021',\n    '10023',\n    '10132',\n    '10075',\n    '10069',\n    '11101',\n    '11201',\n    '11206',\n    '11238',\n    '11231',\n    '11109',\n    '11205',\n    '11222',\n    '11104',\n    '11217',\n    '11211',\n    '11106',\n    '11368',\n    '11372',\n    '11216',\n    '11225',\n    '11374',\n    '11379',\n    '11385',\n    '11370',\n    '11103',\n    '11377',\n    '11369',\n    '11355',\n    '11373',\n    '11221',\n    '11203',\n    '11232',\n    '11371',\n    '11218',\n    '11378',\n    '11105',\n    '11102',\n    '11226',\n    '11233',\n    '11375',\n    '11237',\n    '11215',\n    '11354',\n    '11213'\n]\n\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete, { createFilterOptions } from '@material-ui/lab/Autocomplete';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport parse from 'autosuggest-highlight/parse';\nimport throttle from 'lodash/throttle';\nimport ModalZipCode from \"../components/modal/modal.component\";\nimport { MODAL_CONSTANTS, VALID_ZIP_CODES } from \"../Constants\";\n\n// This function is used to load the script for Google with the API Key\nfunction loadScript(src, position, id) {\n    if (!position) {\n        return;\n    }\n    const script = document.createElement('script');\n    script.setAttribute('async', '');\n    script.setAttribute('id', id);\n    script.src = src;\n    position.appendChild(script);\n}\n\n// This limits the address options to be 3\nconst filterOptions = createFilterOptions({\n    limit: 3,\n});\n\n// This gives styles to the address box\nconst stylesAutocomplete = {\n    MozBoxShadow: '-3px 2px 15px -5px rgb(0 0 0 / 40%)',\n    WebkitBoxShadow: '-3px 2px 15px -5px rgb(0 0 0 / 40%)',\n    boxShadow: '-3px 2px 15px -5px rgb(0 0 0 / 40%)',\n    width: '60%',\n    marginTop: '20px'\n}\n\n// This adds the icon to the options\nconst useStyles = makeStyles((theme) => ({\n    icon: {\n        color: theme.palette.text.secondary,\n        marginRight: theme.spacing(2),\n    },\n}));\n\n// This initialize the Autocomplete Service\nconst autocompleteService = { current: null };\n\n// This validates the zip code of the address \nconst validateZipcode = (placeId) => {\n    return (new Promise((resolve, reject) => {\n        new window.google.maps.places.PlacesService(\n            document.createElement(\"div\")\n        ).getDetails(\n            {\n                placeId,\n                fields: [\"address_components\"],\n            },\n            details => {\n                let postcode = null\n                details?.address_components?.forEach(entry => {\n                    if (entry.types?.[0] === \"postal_code\") {\n                        postcode = entry.long_name\n                        resolve(VALID_ZIP_CODES.indexOf(postcode) > -1)\n                    } else {\n                        resolve(false);\n                    }\n                });\n            }\n        );\n    }));\n}\n\n// === Main function that starts the Autocomplete render \nexport default function AutocompleteGoogle() {\n    const classes = useStyles();\n    const [value, setValue] = React.useState(null);\n    const [open, setOpen] = React.useState(false);\n    const [modalTitle, setTitle] = React.useState(MODAL_CONSTANTS.INVALID_TITLE);\n    const [modalMessage, setMessage] = React.useState(MODAL_CONSTANTS.INVALID_MESSAGE);\n    const [inputValue, setInputValue] = React.useState('');\n    const [options, setOptions] = React.useState([]);\n\n    // React hooks for the API calculation\n    const loaded = React.useRef(false);\n    const fetch = React.useMemo(\n        () =>\n            throttle((request, callback) => {\n                autocompleteService.current.getPlacePredictions(request, callback);\n            }, 200),\n        [],\n    );\n\n    // This handles the Closing of the modal\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    // This handles the data of the modal\n    const handleInvalidAddress = () => {\n        setTitle(MODAL_CONSTANTS.INVALID_TITLE);\n        setMessage(MODAL_CONSTANTS.INVALID_MESSAGE);\n    };\n    const handleValidAddress = () => {\n        setTitle(MODAL_CONSTANTS.VALID_TITLE);\n        setMessage(MODAL_CONSTANTS.VALID_MESSAGE);\n    };\n\n    // Loading script for Google\n    if (typeof window !== 'undefined' && !loaded.current) {\n        if (!document.querySelector('#google-maps')) {\n            loadScript(\n                'https://maps.googleapis.com/maps/api/js?key=AIzaSyD6tLxic9ggVs0iwnlvQ0U65QPr_NDgrzQ&libraries=places',\n\n                document.querySelector('head'),\n                'google-maps',\n            );\n        }\n        loaded.current = true;\n    }\n\n    // This hook manages the API data \n    React.useEffect(() => {\n        let active = true;\n        if (!autocompleteService.current && window.google) {\n            autocompleteService.current = new window.google.maps.places.AutocompleteService();\n        }\n        if (!autocompleteService.current) {\n            return undefined;\n        }\n        if (inputValue === '') {\n            setOptions(value ? [value] : []);\n            return undefined;\n        }\n\n        // This controls the address predictions on the API\n        fetch({ input: inputValue }, async (results) => {\n            if (active) {\n                let newOptions = [];\n                if (value) {\n                    newOptions = [value];\n                }\n                if (results) {\n                    newOptions = [...newOptions, ...results];\n                }\n                setOptions(newOptions);\n                if (results.length < 3) {\n                    validateZipcode(results[0].place_id).then((response) => {\n                        if (response) {\n                            handleValidAddress();\n                        } else {\n                            handleInvalidAddress();\n                        }\n                        setOpen(true);\n                    });\n                }\n            }\n        });\n        return () => {\n            active = false;\n        };\n    }, [value, inputValue, fetch]);\n    \n    // Redering section for autocomplete component for the main Google address\n    return (\n        <>\n            <Autocomplete\n                id=\"google-map-demo\"\n                style={stylesAutocomplete}\n                getOptionLabel={(option) => (typeof option === 'string' ? option : option.description)}\n                filterOptions={filterOptions}\n                options={options}\n                autoComplete\n                includeInputInList\n                filterSelectedOptions\n                value={value}\n                onChange={(event, newValue) => {\n                    setOptions(newValue ? [newValue, ...options] : options);\n                    setValue(newValue);\n                }}\n                onInputChange={(event, newInputValue) => {\n                    setInputValue(newInputValue);\n                }}\n                renderInput={(params) => (\n                    <TextField {...params} label=\"Add a location\" variant=\"outlined\" fullWidth />\n                )}\n\n                // Redering section for the Google address predictions\n                renderOption={(option) => {\n                    const matches = option.structured_formatting.main_text_matched_substrings;\n                    const parts = parse(\n                        option.structured_formatting.main_text,\n                        matches.map((match) => [match.offset, match.offset + match.length]),\n                    );\n                    return (\n                        <Grid container alignItems=\"center\">\n                            <Grid item>\n                                <LocationOnIcon className={classes.icon} />\n                            </Grid>\n                            <Grid item xs>\n                                {parts.map((part, index) => (\n                                    <span key={index} style={{ fontWeight: part.highlight ? 700 : 400 }}>\n                                        {part.text}\n                                    </span>\n                                ))}\n                                <Typography variant=\"body2\" color=\"textSecondary\">\n                                    {option.structured_formatting.secondary_text}\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                    );\n                }}\n            />\n            <ModalZipCode open={open} handleClose={handleClose} modalTitle={modalTitle} modalMessage={modalMessage} />\n        </>\n    );\n}\n","import React from 'react';\nimport '../autocomplete/autocomplete.styles.scss';\nimport AutocompleteGoogle from \"../../services/AutocompleteGoogle\";\n\nconst Autocomplete = () => {\n\n return(\n  <div className=\"autocomplete_google\">\n    <AutocompleteGoogle className=\"autocomplete_google\"/>\n  </div>\n  );\n};\n\n\n\nexport default Autocomplete;\n","import React from 'react';\nimport '../homepage/homepage.styles.scss' ;\n\nimport Autocomplete  from '../../components/autocomplete/autocomplete.component';\n\nconst HomePage = () => (\n  <div className='homepage'>\n      <h1>Where are you located?</h1>\n      <h4>So we know where to drop off the stuff</h4>\n      <p>We won't share your address <br />\n       with your ex (or whoever)</p>\n    <Autocomplete/>\n  </div>\n);\n\nexport default HomePage;\n","import React from 'react';\nimport HomePage from './pages/homepage/homepage.component';\nimport './App.css';\n// Adding browser router controls\nimport { Switch, Route } from 'react-router-dom';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Switch>\n          <Route exact path='/' component={HomePage} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n//=== Added imports ===\nimport 'fontsource-roboto';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n//AIzaSyD6tLxic9ggVs0iwnlvQ0U65QPr_NDgrzQ"],"sourceRoot":""}